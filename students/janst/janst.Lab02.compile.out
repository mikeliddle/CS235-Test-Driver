compiling files:
./Cdh.cpp ./Course.cpp ./Cr.cpp ./Csg.cpp ./Grade.cpp ./main.cpp ./Schedule.cpp ./Snap.cpp

g++ -std=c++14 -Wall -g -o"run_me" *.cpp
main.cpp: In function ‘int main(int, char**)’:
main.cpp:163:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int j = 0; j < csgs.size(); j++)
                      ^
main.cpp:178:24: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
      for (int k = 0; k < cdhs.size(); k++)
                        ^
main.cpp:185:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
        for (int l = 0; l < days.size(); l++)
                          ^
main.cpp:198:24: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
      for (int k = 0; k < crs.size(); k++)
                        ^
main.cpp:225:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < csgs.size(); i++)
                    ^
main.cpp:228:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int j = 0; j < myGrades.size(); j++)
                     ^
main.cpp:253:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < csgs.size(); i++)
                    ^
In file included from main.cpp:11:0:
Csg.h: In substitution of ‘template<class _Tp1, class _Up1, class> static std::true_type std::__is_assignable_helper<_Tp, _Up>::__test(int) [with _Tp1 = Csg&; _Up1 = Csg&&; <template-parameter-1-3> = <missing>]’:
/usr/include/c++/5/type_traits:1228:40:   required from ‘class std::__is_assignable_helper<Csg&, Csg&&>’
/usr/include/c++/5/type_traits:1233:12:   required from ‘struct std::is_assignable<Csg&, Csg&&>’
/usr/include/c++/5/bits/stl_uninitialized.h:120:70:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<Csg*>; _ForwardIterator = Csg*]’
/usr/include/c++/5/bits/stl_uninitialized.h:281:37:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::move_iterator<Csg*>; _ForwardIterator = Csg*; _Tp = Csg]’
/usr/include/c++/5/bits/stl_uninitialized.h:303:2:   required from ‘_ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = Csg*; _ForwardIterator = Csg*; _Allocator = std::allocator<Csg>]’
/usr/include/c++/5/bits/vector.tcc:422:8:   required from ‘void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {Csg}; _Tp = Csg; _Alloc = std::allocator<Csg>]’
/usr/include/c++/5/bits/vector.tcc:101:23:   required from ‘void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {Csg}; _Tp = Csg; _Alloc = std::allocator<Csg>]’
/usr/include/c++/5/bits/stl_vector.h:932:21:   required from ‘void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = Csg; _Alloc = std::allocator<Csg>; std::vector<_Tp, _Alloc>::value_type = Csg]’
main.cpp:103:60:   required from here
Csg.h:4:7: warning: defaulted move assignment for ‘Csg’ calls a non-trivial move assignment operator for virtual base ‘Course’ [-Wvirtual-move-assign]
 class Csg : virtual public Course {
       ^
In file included from main.cpp:10:0:
Cdh.h: In substitution of ‘template<class _Tp1, class _Up1, class> static std::true_type std::__is_assignable_helper<_Tp, _Up>::__test(int) [with _Tp1 = Cdh&; _Up1 = Cdh&&; <template-parameter-1-3> = <missing>]’:
/usr/include/c++/5/type_traits:1228:40:   required from ‘class std::__is_assignable_helper<Cdh&, Cdh&&>’
/usr/include/c++/5/type_traits:1233:12:   required from ‘struct std::is_assignable<Cdh&, Cdh&&>’
/usr/include/c++/5/bits/stl_uninitialized.h:120:70:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<Cdh*>; _ForwardIterator = Cdh*]’
/usr/include/c++/5/bits/stl_uninitialized.h:281:37:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::move_iterator<Cdh*>; _ForwardIterator = Cdh*; _Tp = Cdh]’
/usr/include/c++/5/bits/stl_uninitialized.h:303:2:   required from ‘_ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = Cdh*; _ForwardIterator = Cdh*; _Allocator = std::allocator<Cdh>]’
/usr/include/c++/5/bits/vector.tcc:422:8:   required from ‘void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {Cdh}; _Tp = Cdh; _Alloc = std::allocator<Cdh>]’
/usr/include/c++/5/bits/vector.tcc:101:23:   required from ‘void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {Cdh}; _Tp = Cdh; _Alloc = std::allocator<Cdh>]’
/usr/include/c++/5/bits/stl_vector.h:932:21:   required from ‘void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = Cdh; _Alloc = std::allocator<Cdh>; std::vector<_Tp, _Alloc>::value_type = Cdh]’
main.cpp:113:46:   required from here
Cdh.h:4:7: warning: defaulted move assignment for ‘Cdh’ calls a non-trivial move assignment operator for virtual base ‘Course’ [-Wvirtual-move-assign]
 class Cdh : virtual public Course {
       ^
In file included from main.cpp:8:0:
Cr.h: In substitution of ‘template<class _Tp1, class _Up1, class> static std::true_type std::__is_assignable_helper<_Tp, _Up>::__test(int) [with _Tp1 = Cr&; _Up1 = Cr&&; <template-parameter-1-3> = <missing>]’:
/usr/include/c++/5/type_traits:1228:40:   required from ‘class std::__is_assignable_helper<Cr&, Cr&&>’
/usr/include/c++/5/type_traits:1233:12:   required from ‘struct std::is_assignable<Cr&, Cr&&>’
/usr/include/c++/5/bits/stl_uninitialized.h:120:70:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<Cr*>; _ForwardIterator = Cr*]’
/usr/include/c++/5/bits/stl_uninitialized.h:281:37:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::move_iterator<Cr*>; _ForwardIterator = Cr*; _Tp = Cr]’
/usr/include/c++/5/bits/stl_uninitialized.h:303:2:   required from ‘_ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = Cr*; _ForwardIterator = Cr*; _Allocator = std::allocator<Cr>]’
/usr/include/c++/5/bits/vector.tcc:422:8:   required from ‘void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {Cr}; _Tp = Cr; _Alloc = std::allocator<Cr>]’
/usr/include/c++/5/bits/vector.tcc:101:23:   required from ‘void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {Cr}; _Tp = Cr; _Alloc = std::allocator<Cr>]’
/usr/include/c++/5/bits/stl_vector.h:932:21:   required from ‘void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = Cr; _Alloc = std::allocator<Cr>; std::vector<_Tp, _Alloc>::value_type = Cr]’
main.cpp:121:39:   required from here
Cr.h:4:7: warning: defaulted move assignment for ‘Cr’ calls a non-trivial move assignment operator for virtual base ‘Course’ [-Wvirtual-move-assign]
 class Cr: virtual public Course {
       ^
Schedule.cpp: In constructor ‘Schedule::Schedule(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string, std::__cxx11::string, std::__cxx11::string, std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)’:
Schedule.cpp:8:192: warning: base ‘Cr’ will be initialized after [-Wreorder]
 Schedule::Schedule(std::string a, std::string b, std::string c, std::string d, std::string e, std::string f, std::string g, std::string h) : Snap(b, c, d, e), Cdh(a, f, g), Cr(a, h), Course(a){}
                                                                                                                                                                                                ^
Schedule.cpp:8:192: warning:   base ‘Course’ [-Wreorder]
Schedule.cpp:8:1: warning:   when initialized here [-Wreorder]
 Schedule::Schedule(std::string a, std::string b, std::string c, std::string d, std::string e, std::string f, std::string g, std::string h) : Snap(b, c, d, e), Cdh(a, f, g), Cr(a, h), Course(a){}
 ^
Compilation Succeeded!
